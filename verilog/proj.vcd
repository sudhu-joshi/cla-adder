$date
	Tue Dec  3 07:04:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cla_proj $end
$var wire 4 ! S [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A_in [3:0] $end
$var reg 4 $ B_in [3:0] $end
$var reg 1 % Cin $end
$var reg 1 & clk $end
$scope module cla_ff_inst $end
$var wire 4 ' A_in [3:0] $end
$var wire 4 ( B_in [3:0] $end
$var wire 1 % Cin $end
$var wire 4 ) G [3:0] $end
$var wire 4 * P [3:0] $end
$var wire 4 + S [3:0] $end
$var wire 1 & clk $end
$var wire 1 " Cout $end
$var wire 5 , C [4:0] $end
$var wire 4 - B [3:0] $end
$var wire 4 . A [3:0] $end
$scope module dff_A0 $end
$var wire 1 / D $end
$var wire 1 & clk $end
$var reg 1 0 Q $end
$upscope $end
$scope module dff_A1 $end
$var wire 1 1 D $end
$var wire 1 & clk $end
$var reg 1 2 Q $end
$upscope $end
$scope module dff_A2 $end
$var wire 1 3 D $end
$var wire 1 & clk $end
$var reg 1 4 Q $end
$upscope $end
$scope module dff_A3 $end
$var wire 1 5 D $end
$var wire 1 & clk $end
$var reg 1 6 Q $end
$upscope $end
$scope module dff_B0 $end
$var wire 1 7 D $end
$var wire 1 & clk $end
$var reg 1 8 Q $end
$upscope $end
$scope module dff_B1 $end
$var wire 1 9 D $end
$var wire 1 & clk $end
$var reg 1 : Q $end
$upscope $end
$scope module dff_B2 $end
$var wire 1 ; D $end
$var wire 1 & clk $end
$var reg 1 < Q $end
$upscope $end
$scope module dff_B3 $end
$var wire 1 = D $end
$var wire 1 & clk $end
$var reg 1 > Q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x>
0=
x<
0;
x:
09
x8
07
x6
05
x4
03
x2
01
x0
0/
bx .
bx -
bx0 ,
bx +
bx *
bx )
b0 (
b0 '
0&
0%
b0 $
b0 #
x"
bx !
$end
#5
0"
b0 ,
b0 !
b0 +
b0 )
b0 *
00
02
04
b0 .
06
08
0:
0<
b0 -
0>
1&
#10
17
1/
0&
b1 $
b1 (
b1 #
b1 '
#15
b10 !
b10 +
b10 ,
b1 )
b1 -
18
b1 .
10
1&
#20
07
19
0/
11
0&
b10 $
b10 (
b10 #
b10 '
#25
b100 !
b100 +
b100 ,
b10 )
00
b10 .
12
08
b10 -
1:
1&
#30
17
1/
0&
b11 $
b11 (
b11 #
b11 '
#35
b110 !
b110 +
b110 ,
b11 )
b11 -
18
b11 .
10
1&
#40
07
09
1;
0/
01
13
0&
b100 $
b100 (
b100 #
b100 '
#45
b1000 !
b1000 +
b1000 ,
b100 )
00
02
b100 .
14
08
0:
b100 -
1<
1&
#50
17
1/
0&
b101 $
b101 (
b101 #
b101 '
#55
b1010 !
b1010 +
b1010 ,
b101 )
b101 -
18
b101 .
10
1&
#60
07
19
0/
11
0&
b110 $
b110 (
b110 #
b110 '
#65
b1100 !
b1100 +
b1100 ,
b110 )
00
b110 .
12
08
b110 -
1:
1&
#70
17
1/
0&
b111 $
b111 (
b111 #
b111 '
#75
b1110 !
b1110 +
b1110 ,
b111 )
b111 -
18
b111 .
10
1&
#80
07
09
0;
1=
0/
01
03
15
0&
b1000 $
b1000 (
b1000 #
b1000 '
#85
1"
b0 !
b0 +
b10000 ,
b1000 )
00
02
04
b1000 .
16
08
0:
0<
b1000 -
1>
1&
#90
17
1/
0&
b1001 $
b1001 (
b1001 #
b1001 '
#95
b10 !
b10 +
b10010 ,
b1001 )
b1001 -
18
b1001 .
10
1&
#100
07
19
0/
11
0&
b1010 $
b1010 (
b1010 #
b1010 '
#105
b100 !
b100 +
b10100 ,
b1010 )
00
b1010 .
12
08
b1010 -
1:
1&
#110
17
1/
0&
b1011 $
b1011 (
b1011 #
b1011 '
#115
b110 !
b110 +
b10110 ,
b1011 )
b1011 -
18
b1011 .
10
1&
#120
07
09
1;
0/
01
13
0&
b1100 $
b1100 (
b1100 #
b1100 '
#125
b1000 !
b1000 +
b11000 ,
b1100 )
00
02
b1100 .
14
08
0:
b1100 -
1<
1&
#130
17
1/
0&
b1101 $
b1101 (
b1101 #
b1101 '
#135
b1010 !
b1010 +
b11010 ,
b1101 )
b1101 -
18
b1101 .
10
1&
#140
07
19
0/
11
0&
b1110 $
b1110 (
b1110 #
b1110 '
#145
b1100 !
b1100 +
b11100 ,
b1110 )
00
b1110 .
12
08
b1110 -
1:
1&
#150
17
1/
0&
b1111 $
b1111 (
b1111 #
b1111 '
#155
b1110 !
b1110 +
b11110 ,
b1111 )
b1111 -
18
b1111 .
10
1&
#160
b1111 !
b1111 +
07
09
0;
0=
0/
01
03
05
0&
b0 $
b0 (
b0 #
b0 '
b11111 ,
1%
#165
0"
b1 !
b1 +
b1 ,
b0 )
00
02
04
b0 .
06
08
0:
0<
b0 -
0>
1&
#170
17
1/
0&
b1 $
b1 (
b1 #
b1 '
#175
b11 !
b11 +
b11 ,
b1 )
b1 -
18
b1 .
10
1&
#180
07
19
0/
11
0&
b10 $
b10 (
b10 #
b10 '
#185
b101 !
b101 +
b101 ,
b10 )
00
b10 .
12
08
b10 -
1:
1&
#190
17
1/
0&
b11 $
b11 (
b11 #
b11 '
#195
b111 !
b111 +
b111 ,
b11 )
b11 -
18
b11 .
10
1&
#200
07
09
1;
0/
01
13
0&
b100 $
b100 (
b100 #
b100 '
#205
b1001 !
b1001 +
b1001 ,
b100 )
00
02
b100 .
14
08
0:
b100 -
1<
1&
#210
17
1/
0&
b101 $
b101 (
b101 #
b101 '
#215
b1011 !
b1011 +
b1011 ,
b101 )
b101 -
18
b101 .
10
1&
#220
07
19
0/
11
0&
b110 $
b110 (
b110 #
b110 '
#225
b1101 !
b1101 +
b1101 ,
b110 )
00
b110 .
12
08
b110 -
1:
1&
#230
17
1/
0&
b111 $
b111 (
b111 #
b111 '
#235
b1111 !
b1111 +
b1111 ,
b111 )
b111 -
18
b111 .
10
1&
#240
07
09
0;
1=
0/
01
03
15
0&
b1000 $
b1000 (
b1000 #
b1000 '
#245
1"
b1 !
b1 +
b10001 ,
b1000 )
00
02
04
b1000 .
16
08
0:
0<
b1000 -
1>
1&
#250
17
1/
0&
b1001 $
b1001 (
b1001 #
b1001 '
#255
b11 !
b11 +
b10011 ,
b1001 )
b1001 -
18
b1001 .
10
1&
#260
07
19
0/
11
0&
b1010 $
b1010 (
b1010 #
b1010 '
#265
b101 !
b101 +
b10101 ,
b1010 )
00
b1010 .
12
08
b1010 -
1:
1&
#270
17
1/
0&
b1011 $
b1011 (
b1011 #
b1011 '
#275
b111 !
b111 +
b10111 ,
b1011 )
b1011 -
18
b1011 .
10
1&
#280
07
09
1;
0/
01
13
0&
b1100 $
b1100 (
b1100 #
b1100 '
#285
b1001 !
b1001 +
b11001 ,
b1100 )
00
02
b1100 .
14
08
0:
b1100 -
1<
1&
#290
17
1/
0&
b1101 $
b1101 (
b1101 #
b1101 '
#295
b1011 !
b1011 +
b11011 ,
b1101 )
b1101 -
18
b1101 .
10
1&
#300
07
19
0/
11
0&
b1110 $
b1110 (
b1110 #
b1110 '
#305
b1101 !
b1101 +
b11101 ,
b1110 )
00
b1110 .
12
08
b1110 -
1:
1&
#310
17
1/
0&
b1111 $
b1111 (
b1111 #
b1111 '
#315
b1111 !
b1111 +
b11111 ,
b1111 )
b1111 -
18
b1111 .
10
1&
#320
0&
